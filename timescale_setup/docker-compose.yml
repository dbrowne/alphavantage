# docker-compose.yml
version: '3.8'


services:
  ts_postgres:
    build:
      context: ./docker/timescaledb
      dockerfile: ts_pg_dockerfile
    container_name: ts_pg_${PROJECT_NAME:-av}_${ENVIRONMENT:-dev}
    hostname: ts_pg_${ENVIRONMENT:-dev}
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-postgres}
      POSTGRES_DB: postgres
      AV_USER_PASSWORD: ${AV_USER_PASSWORD:-av_password}
      TZ: UTC
    ports:
      - "${DB_PORT:-6433}:5432"  # Non-standard port
    volumes:
      - ts_pg_data:/var/lib/postgresql/data
      - ts_pg_archive:/archive
      - ./backups:/backups
    networks:
      ts_pg_net:
        ipv4_address: 172.28.1.2
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5
    restart: unless-stopped
    deploy:
      resources:
        limits:
          cpus: '4'
          memory: 8G
        reservations:
          cpus: '2'
          memory: 4G

  ts_pg_admin:
    image: dpage/pgadmin4:latest
    container_name: ts_pg_admin_${PROJECT_NAME:-av}_${ENVIRONMENT:-dev}
    environment:
      PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_PASSWORD:-admin}
      PGADMIN_DEFAULT_EMAIL: ${PGADMIN_EMAIL:-admin@av.local}
      PGADMIN_CONFIG_SERVER_MODE: 'False'
      PGADMIN_LISTEN_PORT: 80
    ports:
      - "${PGADMIN_PORT:-6051}:80"  # Non-standard port
    volumes:
      - ts_pg_admin_data:/var/lib/pgadmin
    networks:
      ts_pg_net:
        ipv4_address: 172.28.1.3
    depends_on:
      - ts_postgres
    restart: unless-stopped

volumes:
  ts_pg_data:
    name: ${PROJECT_NAME:-av}_pgdata_${ENVIRONMENT:-dev}
  ts_pg_archive:
    name: ${PROJECT_NAME:-av}_archive_${ENVIRONMENT:-dev}
  ts_pg_admin_data:
    name: ${PROJECT_NAME:-av}_pgadmin_${ENVIRONMENT:-dev}

networks:
  ts_pg_net:
    name: ${PROJECT_NAME:-av}_network_${ENVIRONMENT:-dev}
    driver: bridge
    ipam:
      config:
        - subnet: 172.28.0.0/16
          gateway: 172.28.0.1
